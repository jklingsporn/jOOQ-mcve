/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.tables;


import binding.MyPojo;
import binding.MyPojoBinding;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.mcve.Indexes;
import org.jooq.mcve.Keys;
import org.jooq.mcve.Mcve;
import org.jooq.mcve.tables.records.Issue_9679Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Issue_9679 extends TableImpl<Issue_9679Record> {

    private static final long serialVersionUID = 198837526;

    /**
     * The reference instance of <code>mcve.issue_9679</code>
     */
    public static final Issue_9679 ISSUE_9679 = new Issue_9679();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Issue_9679Record> getRecordType() {
        return Issue_9679Record.class;
    }

    /**
     * The column <code>mcve.issue_9679.id</code>.
     */
    public final TableField<Issue_9679Record, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('mcve.issue_9679_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>mcve.issue_9679.payload</code>.
     */
    public final TableField<Issue_9679Record, List<MyPojo>> PAYLOAD = createField(DSL.name("payload"), org.jooq.impl.SQLDataType.JSONB, this, "", new MyPojoBinding());

    /**
     * Create a <code>mcve.issue_9679</code> table reference
     */
    public Issue_9679() {
        this(DSL.name("issue_9679"), null);
    }

    /**
     * Create an aliased <code>mcve.issue_9679</code> table reference
     */
    public Issue_9679(String alias) {
        this(DSL.name(alias), ISSUE_9679);
    }

    /**
     * Create an aliased <code>mcve.issue_9679</code> table reference
     */
    public Issue_9679(Name alias) {
        this(alias, ISSUE_9679);
    }

    private Issue_9679(Name alias, Table<Issue_9679Record> aliased) {
        this(alias, aliased, null);
    }

    private Issue_9679(Name alias, Table<Issue_9679Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Issue_9679(Table<O> child, ForeignKey<O, Issue_9679Record> key) {
        super(child, key, ISSUE_9679);
    }

    @Override
    public Schema getSchema() {
        return Mcve.MCVE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ISSUE_9679_PKEY);
    }

    @Override
    public Identity<Issue_9679Record, Integer> getIdentity() {
        return Keys.IDENTITY_ISSUE_9679;
    }

    @Override
    public UniqueKey<Issue_9679Record> getPrimaryKey() {
        return Keys.ISSUE_9679_PKEY;
    }

    @Override
    public List<UniqueKey<Issue_9679Record>> getKeys() {
        return Arrays.<UniqueKey<Issue_9679Record>>asList(Keys.ISSUE_9679_PKEY);
    }

    @Override
    public Issue_9679 as(String alias) {
        return new Issue_9679(DSL.name(alias), this);
    }

    @Override
    public Issue_9679 as(Name alias) {
        return new Issue_9679(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Issue_9679 rename(String name) {
        return new Issue_9679(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Issue_9679 rename(Name name) {
        return new Issue_9679(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, List<MyPojo>> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
